{"version":3,"sources":["TopNav.jsx","data.js","Account.jsx","Movements.jsx","Status.jsx","Overlay.jsx","Login.jsx","updateFunctions/addMovement.js","updateFunctions/updateData.js","updateFunctions/updateAccsLend.js","updateFunctions/findDeleteOrDecrease.js","updateFunctions/updateCurrAcc.js","updateFunctions/updateAccsRepay.js","App.jsx","reportWebVitals.js","index.jsx"],"names":["TopNav","props","state","username","pin","className","undefined","this","currentAcc","owner","split","src","alt","style","display","logOutBtnVisibility","onClick","e","preventDefault","logOut","React","Component","date","format","Date","accounts","balance","accNum","movements","amount","transactionTyp","sender","recepient","message","debt","lended","isBlocked","forEach","acc","toLowerCase","map","item","join","timer","Movements","type","i","mov","Status","onChange","setState","hidden","length","to","value","Account","currentValue","lendAmount","repayAmount","repayMessage","repayRecepient","logOutTime","blockBtnText","bind","logoutTimer","find","accToBlock","clearInterval","setInterval","min","String","Math","trunc","padStart","sec","action","opacity","target","placeholder","Number","lend","htmlFor","maxLength","handleRepayment","uploadMoney","fontSize","color","marginRight","marginLeft","reduce","curr","Overlay","overlayText","handleCloseOverlay","Login","inputRef","createRef","current","focus","required","ref","console","log","login","addMovement","fromAcc","forAcc","updateData","where","otherAcc","updateAccsLend","accs","isAccExistsInLended","findDeleteOrDecrease","filter","updateCurrAcc","prev","updateAccsRepay","App","actuelDate","overlayHidden","loginVisibility","handleLogin","handleLend","handleUploadMoney","escFunction","handleLogOut","validationForTransaction","trim","valid","doIHaveDebt","obj","toUpperCase","event","keyCode","document","addEventListener","removeEventListener","isValid","some","render","location","TransitionGroup","CSSTransition","classNames","timeout","path","isAnimationEnded","key","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.39cbc486.chunk.js","sourcesContent":["import React from 'react';\nimport { MdPowerSettingsNew } from 'react-icons/md';\nimport './TopNav.scss';\n\nclass TopNav extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      pin: '',\n    };\n  }\n  render() {\n    return (\n      <nav>\n        <p className=\"welcome\">\n          {this.props.currentAcc === undefined\n            ? 'Welcome in our HouseHold Account'\n            : `Welcome back ${this.props.currentAcc.owner.split(' ')[0]}`}\n        </p>\n        <img src=\"img/logo.png\" alt=\"\" className=\"logo\" />\n        <button\n          style={{ display: this.props.logOutBtnVisibility ? 'none' : '' }}\n          className=\"loginForm__btn\"\n          onClick={(e) => {\n            e.preventDefault();\n            this.props.logOut();\n          }}\n        >\n          <span>\n            <MdPowerSettingsNew />\n          </span>{' '}\n        </button>\n      </nav>\n    );\n  }\n}\n\nexport default TopNav;\n","import { format } from \"date-fns\";\n\n/// implement actuel Date\n// Date formatting with date-fns\nexport let date = format(new Date(), \"dd/MM/yy\");\n// const today = new Date();\n// export let date = today.getMonth() + 1 + \"-\" + today.getDate();\n//////////////////\n// Data\nexport const account1 = {\n    owner: 'John Miller',\n    balance: 10000,\n    accNum: 'DE **** **** **** **** 1234',\n    movements: [{\n        amount: -200,\n        date: date,\n        transactionTyp: \"casual\",\n        sender: 'jm',\n        recepient: 'km',\n        message: `i don't know`\n    }],\n    debt: [],\n    lended: [],\n\n\n};\n\nexport const account2 = {\n    owner: 'Teresa Miller',\n    accNum: 'DE **** **** **** **** 4444',\n    balance: 7000,\n    movements: [],\n    debt: [],\n    lended: [],\n};\n\nexport const account3 = {\n    owner: 'Steven Miller',\n    accNum: 'DE **** **** **** **** 5678',\n    balance: 0,\n    movements: [],\n    isBlocked: false,\n    debt: [],\n    lended: [],\n};\n\nexport const account4 = {\n    owner: 'Katie Miller',\n    balance: 0,\n    accNum: 'DE **** **** **** **** 9999',\n    movements: [{\n        amount: 200,\n        date: date,\n        transactionTyp: \"casual\",\n        sender: 'jm',\n        recepient: 'km',\n        message: `i don't know`\n    }],\n    isBlocked: false,\n    debt: [],\n    lended: [],\n\n};\nexport const testAcc = {\n    owner: 'Test Person',\n    username: \"tp\",\n    balance: 5000,\n    movements: [{\n        amount: -200,\n        time: \"date\",\n        transactionTyp: \"lend\",\n        sender: 'jm',\n        recepient: 'km',\n        message: `i don't know`\n    }, {\n        amount: 400,\n        time: \"12-12\",\n        transactionTyp: \"borrow\",\n        sender: 'tm',\n        recepient: 'sm',\n        message: `football`\n    }],\n}\n\n\n\nexport const accounts = [account1, account2, account3, account4];\n// Create username\n\nconst createUsername = function(accs) {\n    accs.forEach(acc => {\n        acc.username = acc.owner\n            .toLowerCase().split(' ').map(item => item[0]).join('')\n    });\n}\ncreateUsername(accounts);","import React from 'react';\nimport './Account.scss';\nimport './variables.scss';\nimport './data';\nimport { format } from 'date-fns';\nimport Movements from './Movements';\nimport Status from './Status';\n\nlet timer;\n\nclass Account extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentAcc: this.props.currentAcc === undefined ? false : true, /// <= this is not working\n      currentValue: '',\n      recepient: '',\n      lendAmount: '',\n      message: '',\n      amount: '',\n      repayAmount: '',\n      repayMessage: '',\n      repayRecepient: '',\n      logOutTime: 3000, // it is related to to logoutTimer()\n    };\n    this.blockBtnText = this.blockBtnText.bind(this);\n    this.logoutTimer = this.logoutTimer.bind(this);\n  }\n\n  blockBtnText() {\n    const acc = this.props.accounts.find((acc) => {\n      return acc.username === this.state.accToBlock;\n    });\n    if (acc === undefined || acc.isBlocked === false) {\n      return 'block';\n    } else {\n      return 'unblock';\n    }\n  }\n  logoutTimer() {\n    if (this.state.logOutTime === 0) {\n      clearInterval(timer);\n      this.props.logOut();\n    }\n\n    // maybe we should do it from prevState?\n    this.setState({\n      logOutTime: this.state.logOutTime - 1,\n    });\n  }\n  componentDidMount() {\n    timer = setInterval(this.logoutTimer, 1000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.logoutTimer);\n  }\n\n  render() {\n    let date = format(new Date(), 'dd/MM/yy');\n    const min = String(Math.trunc(this.state.logOutTime / 60)).padStart(2, 0);\n    const sec = String(this.state.logOutTime % 60).padStart(2, 0);\n    return (\n      <div className=\"main\">\n        <Status\n          currentAcc={this.props.currentAcc}\n          date={date}\n          accounts={this.props.accounts}\n        />\n\n        {/* account component */}\n        <div className=\"accBody\">\n          <div className=\"mov\">\n            <div className=\"mov__headline\">\n              <p className=\"mov__headline--text\">Latest transactions</p>\n              <button className=\"mov__headline--btn\">\n                {' '}\n                <span> &rarr;</span>{' '}\n              </button>\n            </div>\n            {this.props.currentAcc?.movements.map((mov, i) => {\n              return (\n                <Movements\n                  recepient={mov.recepient}\n                  sender={mov.sender}\n                  transactionTyp={mov.transactionTyp}\n                  key={i + 1}\n                  i={i}\n                  type={mov.amount > 0 ? 'dep' : 'withD'}\n                  mov={mov.amount}\n                  message={mov.message}\n                  date={mov.date}\n                />\n              );\n            })}\n          </div>\n\n          <div className=\"ops\">\n            <div className=\"op op--lend\">\n              <h2>Lend money</h2>\n              <form\n                action=\"#\"\n                className=\"form form--lend\"\n                style={\n                  this.props.currentAcc === undefined\n                    ? { opacity: 0 }\n                    : this.props.currentAcc.isBlocked === true\n                    ? { opacity: 0 }\n                    : { opacity: 1 }\n                }\n              >\n                <div className=\"input-flex\">\n                  <input\n                    value={this.state.recepient}\n                    onChange={(e) => {\n                      this.setState({ recepient: e.target.value });\n                    }}\n                    type=\"text\"\n                    className=\"form__input form__input--forWho\"\n                    placeholder=\"Acc\"\n                  />\n\n                  <input\n                    value={this.state.lendAmount}\n                    onChange={(e) => {\n                      this.setState({ lendAmount: Number(e.target.value) });\n                    }}\n                    type=\"number\"\n                    className=\"form__input form__input--amount\"\n                    min=\"1\"\n                    placeholder=\"Amount\"\n                  />\n                  <button\n                    className=\"form__btn form__btn--lend\"\n                    onClick={(e) => {\n                      e.preventDefault();\n                      if (this.state.message === '') {\n                        this.props.lend(\n                          this.props.currentAcc.username,\n                          this.state.recepient,\n                          this.state.lendAmount\n                        );\n                      } else {\n                        this.props.lend(\n                          this.props.currentAcc.username,\n                          this.state.recepient,\n                          this.state.lendAmount,\n                          this.state.message\n                        );\n                      }\n                      this.setState({\n                        recepient: '',\n                        lendAmount: '',\n                        message: '',\n                      });\n                    }}\n                  >\n                    &rarr;\n                  </button>\n                </div>\n                <div className=\"label-flex\">\n                  <div>\n                    <label htmlFor=\"#\" className=\"form__label\">\n                      For Who\n                    </label>\n                  </div>\n                  <div>\n                    <label htmlFor=\"#\" className=\"form__label\">\n                      Amount\n                    </label>\n                  </div>\n                </div>\n                <input\n                  className=\"form__input form__input--message\"\n                  maxLength=\"25\"\n                  value={this.state.message}\n                  onChange={(e) => {\n                    this.setState({ message: e.target.value });\n                  }}\n                  type=\"text\"\n                  placeholder=\"Explanation\"\n                />\n                <div>\n                  <div className=\"label-flex\">\n                    <label htmlFor=\"#\" className=\"form__label explanation\">\n                      Explanation\n                    </label>\n                  </div>\n                </div>\n              </form>\n            </div>\n            <div className=\"op op--repayment\">\n              <h2>Repay Debt</h2>\n              <form action=\"#\" className=\"form form--repayment\">\n                <div className=\"input-flex\">\n                  <input\n                    value={this.state.repayRecepient}\n                    onChange={(e) => {\n                      this.setState({ repayRecepient: e.target.value });\n                    }}\n                    type=\"text\"\n                    className=\"form__input form__input--for\"\n                    placeholder=\"Acc\"\n                  />\n\n                  <input\n                    value={this.state.repayAmount}\n                    onChange={(e) => {\n                      this.setState({ repayAmount: e.target.value });\n                    }}\n                    type=\"number\"\n                    className=\"form__input form__input--amount\"\n                    min=\"1\"\n                    placeholder=\"Amount\"\n                  />\n                  <button\n                    className=\"form__btn form__btn--repayment\"\n                    onClick={(e) => {\n                      e.preventDefault();\n                      if (this.state.repayMessage === '') {\n                        this.props.handleRepayment(\n                          this.props.currentAcc.username,\n                          this.state.repayRecepient,\n                          this.state.repayAmount\n                        );\n                      } else {\n                        this.props.handleRepayment(\n                          this.props.currentAcc.username,\n                          this.state.repayRecepient,\n                          this.state.repayAmount,\n                          this.state.repayMessage\n                        );\n                      }\n                      this.setState({\n                        repayRecepient: '',\n                        repayAmount: '',\n                        repayMessage: '',\n                      });\n                    }}\n                  >\n                    &rarr;\n                  </button>\n                </div>\n                <div className=\"label-flex\">\n                  <div>\n                    <label htmlFor=\"#\" className=\"form__label\">\n                      For Who\n                    </label>\n                  </div>\n                  <div>\n                    <label htmlFor=\"#\" className=\"form__label\">\n                      Amount\n                    </label>\n                  </div>\n                </div>\n                <input\n                  className=\"form__input form__input--message\"\n                  maxLength=\"25\"\n                  value={this.state.repayMessage}\n                  onChange={(e) => {\n                    this.setState({ repayMessage: e.target.value });\n                  }}\n                  type=\"text\"\n                  placeholder=\"Explanation\"\n                />\n                <div>\n                  <div className=\"label-flex\">\n                    <label htmlFor=\"#\" className=\"form__label\">\n                      Explanation\n                    </label>\n                  </div>\n                </div>\n              </form>\n            </div>\n            <div className=\"op op--upload\">\n              <h2>Upload money</h2>\n              <form\n                action=\"#\"\n                className=\"form form--borrow\"\n                style={\n                  this.props.currentAcc === undefined\n                    ? { opacity: 0 }\n                    : this.props.currentAcc.isBlocked === true\n                    ? { opacity: 0 }\n                    : { opacity: 1 }\n                }\n              >\n                <div className=\"input-flex\">\n                  <input\n                    value={this.state.amount}\n                    onChange={(e) => {\n                      this.setState({ amount: Number(e.target.value) });\n                    }}\n                    type=\"number\"\n                    className=\"form__input\"\n                    min=\"1\"\n                    placeholder=\"Amount\"\n                  />\n                  <button\n                    className=\"form__btn form__btn--borrow\"\n                    onClick={(e) => {\n                      e.preventDefault();\n                      this.props.uploadMoney(\n                        this.props.currentAcc.username,\n                        this.state.amount\n                      );\n                      this.setState({\n                        recepient: '',\n                        amount: '',\n                      });\n                    }}\n                  >\n                    &rarr;\n                  </button>\n                </div>\n                <div className=\"label-flex\">\n                  <div>\n                    <label htmlFor=\"#\" className=\"form__label\">\n                      Amount\n                    </label>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n          <div className=\"summeries\">\n            <div className=\"summeries__header\">\n              <p className=\"summeries__header--text\">Summeries</p>\n              <p\n                style={{\n                  fontSize: '20px',\n                  color: '#777',\n                  marginRight: 'auto',\n                  marginLeft: '.5rem',\n                }}\n              >\n                (Daily)\n              </p>\n              <button className=\"mov__header--btn\">\n                {' '}\n                <span> &rarr;</span>{' '}\n              </button>\n            </div>\n            <div className=\"summeries__body\">\n              <div className=\"labels\">\n                <p className=\"summeries__label\">income</p>\n                <p className=\"summeries__label\">outgang</p>\n                <p className=\"summeries__label\">Logged out in:</p>\n              </div>\n              <div className=\"values\">\n                <p className=\"summeries__value summeries__value--in\">\n                  {this.props.currentAcc?.movements\n                    .map((mov) => {\n                      return mov.amount > 0 ? mov.amount : 0;\n                    })\n                    .reduce((acc, curr) => acc + curr, 0)}\n                  €\n                </p>\n                <p className=\"summeries__value summeries__value--out\">\n                  {this.props.currentAcc?.movements\n                    .map((mov) => {\n                      return mov.amount < 0 ? mov.amount : 0;\n                    })\n                    .reduce((acc, curr) => acc + curr, 0)}\n                  €\n                </p>\n                <p className=\"timer\">\n                  {min}:{sec}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Account;\n","import React, { Component } from \"react\";\nimport \"./Movements.scss\";\n\nclass Movements extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <div className={`mov__row mov__row--${this.props.type}`}>\n        <div className={`mov__type mov__type--${this.props.type}`}>\n          {this.props.i + 1} {this.props.type}\n        </div>\n        <div className=\"mov__transactionTyp\">{this.props.transactionTyp}</div>\n        <div className=\"mov__direction\">\n          {this.props.type === \"dep\"\n            ? `from: ${this.props.sender}`\n            : ` for ${this.props.recepient}`}\n        </div>\n        <div className=\"mov__date\">\n          {this.props.date ? this.props.date : \"unknown\"}\n        </div>\n        <div className=\"mov__message\">{this.props.message}</div>\n        <div className=\"mov__value\">{this.props.mov}€</div>\n      </div>\n    );\n  }\n}\n\nexport default Movements;\n","import React, { Component } from 'react';\nimport './Status.scss';\n\nclass Status extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hidden: false,\n    };\n  }\n  onChange = (date) => this.setState({ date });\n  render() {\n    return (\n      <div className=\"status\">\n        <div className=\"status__current-container\">\n          <p className=\"status__name\">{this.props.currentAcc.owner}</p>\n\n          <p className=\"status__accNum\">\n            {this.props.currentAcc.accNum}{' '}\n            <span className=\"status__accNum--arr\">&rarr;</span>\n          </p>\n          <p className=\"status__date\">{this.props.date}</p>\n          <p className=\"status__label\">Available funds</p>\n          <p className=\"status__value\">\n            {this.props.currentAcc?.balance\n              ? this.props.currentAcc?.balance\n              : 0}\n            <span className=\"status__value--euro\">€</span>\n          </p>\n        </div>\n        <div className=\"status__message\">\n          <div className=\"status__message--label\">\n            <p>Transactions list</p>\n          </div>\n\n          <div className=\"cards\">\n            {this.props.currentAcc?.lended.map((lended, i) => {\n              if (lended.length === 0) {\n                return '';\n              } else {\n                return (\n                  <div className=\"card lended\" key={i}>\n                    <h3>{lended.to}</h3>\n                    <p>owes you</p>\n                    <p>{lended.value}€</p>\n                  </div>\n                );\n              }\n            })}\n            {this.props.currentAcc?.debt.map((debt, i) => {\n              if (debt.length === 0) {\n                return '';\n              } else {\n                return (\n                  <div className=\"card borrowed\" key={i}>\n                    <h3> I owe</h3>\n                    <p>{debt.value}€</p>to\n                    <h3>{debt.to}</h3>\n                  </div>\n                );\n              }\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Status;\n","import React from \"react\";\nimport \"./Overlay.scss\";\n\nclass Overlay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <div>\n        <div\n          className={`overlay ${this.props.hidden === true ? \"hidden\" : \"\"}`}\n        >\n          &nbsp;\n        </div>\n        <div\n          className={`overlay-text ${\n            this.props.hidden === true ? \"hidden\" : \"\"\n          }`}\n        >\n          <p>{this.props.overlayText}</p>\n          <button\n            className=\"overlay-btn\"\n            onClick={this.props.handleCloseOverlay}\n          >\n            X\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Overlay;\n","import React, { Component } from \"react\";\nimport \"./Login.scss\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.inputRef = React.createRef();\n    this.state = {\n      username: \"\",\n      pin: \"\",\n    };\n  }\n  componentDidMount() {\n    this.inputRef.current.focus();\n  }\n  render() {\n    return (\n      <div className=\"login-page\">\n        <div className=\"login-page__form\">\n          <form className=\"\">\n            <div className=\"login-page__form__input-group\">\n              <input\n                onChange={(e) => {\n                  this.setState({ username: e.target.value });\n                }}\n                value={this.state.username}\n                type=\"text\"\n                placeholder=\"username\"\n                required\n                ref={this.inputRef}\n              />\n              <label htmlFor=\"name\" className=\"login-page__form__label\">\n                username\n              </label>\n            </div>\n\n            <input\n              onChange={(e) => {\n                this.setState({ pin: e.target.value });\n              }}\n              value={this.state.pin}\n              maxLength=\"4\"\n              type=\"password\"\n              placeholder=\"password\"\n            />\n            <button\n              className=\"loginButton\"\n              onClick={(e) => {\n                e.preventDefault();\n                console.log();\n                this.props.login(this.state.username, this.state.pin);\n                this.setState({\n                  username: \"\",\n                  pin: \"\",\n                });\n              }}\n            >\n              login\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","export const addMovement = (fromAcc, forAcc, amount, transactionTyp, message, date, acc) => {\n    return [{\n        amount: Number(amount),\n        date: date,\n        transactionTyp: transactionTyp,\n        sender: fromAcc,\n        recepient: forAcc,\n        message: message,\n    }, ...acc.movements];\n};","export const updateData = (where, otherAcc, amount) => {\n    return where.map((item) => {\n        if (item.to === otherAcc) {\n            return { value: item.value + amount, to: otherAcc };\n        } else {\n            return item;\n        }\n    });\n};","import { addMovement } from \"./addMovement\";\nimport { updateData } from \"./updateData\";\n\nexport const updateAccsLend = (accs, fromAcc, forAcc, amount, message, date, isAccExistsInLended) => {\n    // let lend, debt\n\n    return accs.map(acc => {\n        // decision how to update lend and debt \n        // if (isAccExistsInLended) {\n        //     lend = updateData(acc.lended, forAcc, amount);\n        //     debt = updateData(acc.debt, fromAcc, amount);\n        // } else {\n        //     lend = [{ value: amount, to: forAcc }, ...acc.lended]\n        //     debt = [{ value: amount, to: fromAcc }, ...acc.debt]\n        // }\n        if (acc.username === fromAcc) {\n            return {\n                ...acc,\n                movements: addMovement(\n                    fromAcc,\n                    forAcc, -amount,\n                    \"lend\",\n                    message,\n                    date,\n                    acc\n                ),\n                balance: acc.balance - amount,\n                lended: isAccExistsInLended ?\n                    updateData(acc.lended, forAcc, amount) : [{ value: amount, to: forAcc }, ...acc.lended]\n            };\n        }\n        if (acc.username === forAcc) {\n            return {\n                ...acc,\n                movements: addMovement(\n                    fromAcc,\n                    forAcc,\n                    amount,\n                    \"borrow\",\n                    message,\n                    date,\n                    acc\n                ),\n                balance: acc.balance + amount,\n                debt: isAccExistsInLended ?\n                    updateData(acc.debt, fromAcc, amount) : [{ value: amount, to: fromAcc }, ...acc.debt]\n            }\n        }\n        return acc\n    })\n}","export const findDeleteOrDecrease = (where, otherAcc, amount) => {\n    const result = where.find((item) => item.to === otherAcc && item.value - amount !== 0);\n    if (!result) {\n        return where.filter(item => item.to !== otherAcc);\n    } else {\n        return where.map((item, i) => {\n            if (item.to === otherAcc) {\n                return { value: item.value - amount, to: otherAcc };\n            } else {\n                return item;\n            }\n        });\n    }\n};","import { addMovement } from \"./addMovement\";\nimport { findDeleteOrDecrease } from \"./findDeleteOrDecrease\";\nimport { updateData } from \"./updateData\";\n\nexport const updateCurrAcc = (otherAcc, transactionTyp, amount, message, prev, date, isAccExistsInLended) => {\n    let debt, lend;\n\n    if (transactionTyp === \"repayment\") {\n        debt = findDeleteOrDecrease(prev.currentAcc.debt, otherAcc, amount);\n        lend = prev.currentAcc.lended;\n        amount = -amount;\n    } else if (transactionTyp === \"lend\" && isAccExistsInLended) {\n        debt = prev.currentAcc.debt;\n        lend = updateData(prev.currentAcc.lended, otherAcc, -amount);\n    } else if (transactionTyp === \"lend\" && !isAccExistsInLended) {\n        debt = prev.currentAcc.debt;\n        lend = [{ value: -amount, to: otherAcc }, ...prev.currentAcc.lended];\n    }\n\n    return {\n        ...prev.currentAcc,\n        movements: addMovement(\n            prev.currentAcc.username,\n            otherAcc,\n            amount,\n            transactionTyp,\n            message,\n            date,\n            prev.currentAcc\n        ),\n        balance: prev.currentAcc.balance + amount,\n        debt: debt,\n        lended: lend\n    };\n};","import { findDeleteOrDecrease } from \"./findDeleteOrDecrease\";\n\n\nexport const updateAccsRepay = (fromAcc, forAcc, transactionTyp, amount, message, state, prev, date) => {\n    return state.accounts.map((acc) => {\n        if (acc.username === fromAcc) {\n            return {\n                ...acc,\n                movements: [{\n                        amount: -amount,\n                        date: date,\n                        transactionTyp: transactionTyp,\n                        sender: fromAcc,\n                        recepient: forAcc,\n                        message: message,\n                    },\n                    ...acc.movements,\n                ],\n                balance: acc.balance - amount,\n                debt: findDeleteOrDecrease(prev.currentAcc.debt, forAcc, amount),\n            };\n        }\n        if (acc.username === forAcc) {\n            return {\n                ...acc,\n                movements: [{\n                        amount: Number(amount),\n                        date: date,\n                        transactionTyp: transactionTyp,\n                        sender: fromAcc,\n                        recepient: forAcc,\n                        message: message,\n                    },\n                    ...acc.movements,\n                ],\n                balance: acc.balance + Number(amount),\n                lended: findDeleteOrDecrease(acc.lended, fromAcc, amount),\n            };\n        }\n        return acc;\n    })\n}","import './App.scss';\nimport TopNav from './TopNav.jsx';\nimport Account from './Account.jsx';\nimport Overlay from './Overlay.jsx';\nimport Login from './Login.jsx';\nimport React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport { accounts, date } from './data.js';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { updateAccsLend } from './updateFunctions/updateAccsLend';\nimport { updateCurrAcc } from './updateFunctions/updateCurrAcc';\nimport { updateAccsRepay } from './updateFunctions/updateAccsRepay';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentAcc: undefined,\n      accounts: accounts,\n      actuelDate: date,\n      overlayHidden: true,\n      overlayText: '',\n      loginVisibility: true,\n    };\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleLend = this.handleLend.bind(this);\n    this.handleRepayment = this.handleRepayment.bind(this);\n    this.handleUploadMoney = this.handleUploadMoney.bind(this);\n    this.escFunction = this.escFunction.bind(this);\n    this.handleCloseOverlay = this.handleCloseOverlay.bind(this);\n    this.handleLogOut = this.handleLogOut.bind(this);\n    this.validationForTransaction = this.validationForTransaction.bind(this);\n  }\n\n  validationForTransaction(state, fromAcc, forAcc, amount, transactionTyp) {\n    // - WhiteSpace\n    fromAcc = fromAcc.trim();\n    forAcc = forAcc.trim();\n\n    // creating \"valid\" variable to validationForTransaction checking acc\n    const valid = state.accounts.find((acc) => acc.username === forAcc);\n    //checking whether there is a debt or not\n    const doIHaveDebt = state.currentAcc.debt.find(\n      (item) => item.to === forAcc\n    );\n    /// creating obj variable to update the state if the certain conditions meet\n    const obj = { overlayHidden: false, overlayText: '' };\n    if (!valid) {\n      obj.overlayText = 'Invalid userName';\n    } else if (fromAcc === forAcc) {\n      obj.overlayText = \"You can't send money for Yourself!\";\n    } else if (doIHaveDebt === undefined && transactionTyp !== 'lend') {\n      obj.overlayText = `You don't have any debt for ${forAcc.toUpperCase()}`;\n    } else if (doIHaveDebt?.value - amount < 0) {\n      obj.overlayText = `You have to check first your debts`;\n    } else if (!forAcc && !amount) {\n      obj.overlayText = 'Missed dates';\n    } else if (amount > state.currentAcc.balance) {\n      obj.overlayText = \"You don't have enough money!\";\n    } else if (amount <= 0) {\n      obj.overlayText = 'Invalid value';\n    }\n\n    if (obj.overlayText !== '') {\n      this.setState(obj);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  handleLogOut() {\n    this.setState({\n      loginVisibility: true,\n      currentAcc: undefined,\n    });\n  }\n  handleLogin(username, pin) {\n    const valid = this.state.accounts.find((acc) => acc.username === username);\n    if (valid) {\n      this.setState({\n        currentAcc: this.state.accounts.find(\n          (acc) => acc.username === username\n        ),\n        loginVisibility: false,\n      });\n    }\n  }\n\n  handleUploadMoney(forAcc, amount, message = 'upload') {\n    console.log(forAcc, amount);\n    if (amount <= 0) {\n      this.setState({\n        overlayHidden: false,\n        overlayText: 'invalid value',\n      });\n    } else\n      this.setState((prev) => {\n        return {\n          currentAcc: {\n            ...prev.currentAcc,\n            movements: [\n              {\n                amount: amount,\n                date: date,\n                transactionTyp: 'upload',\n                sender: forAcc,\n                recepient: forAcc,\n                message: message,\n              },\n              ...prev.currentAcc.movements,\n            ],\n            balance: prev.currentAcc.balance + amount,\n          },\n\n          accounts: this.state.accounts.map((acc) => {\n            if (acc.username === forAcc) {\n              return {\n                ...acc,\n                movements: [\n                  {\n                    amount: +amount,\n                    date: date,\n                    transactionTyp: 'upload',\n                    sender: forAcc,\n                    recepient: forAcc,\n                    message: message,\n                  },\n                  ...acc.movements,\n                ],\n                balance: acc.balance + amount,\n              };\n            }\n            return acc;\n          }),\n        };\n      });\n  }\n\n  handleCloseOverlay() {\n    this.setState({\n      overlayHidden: true,\n    });\n  }\n  escFunction(event) {\n    if (event.keyCode === 27) {\n      this.setState({\n        overlayHidden: true,\n      });\n    }\n  }\n  componentDidMount() {\n    document.addEventListener('keydown', this.escFunction, false);\n  }\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.escFunction, false);\n  }\n\n  handleRepayment(fromAcc, forAcc, amount, message = 'repayment') {\n    const isValid = this.validationForTransaction(\n      this.state,\n      fromAcc,\n      forAcc,\n      amount\n    );\n    if (isValid)\n      this.setState((prev) => {\n        return {\n          currentAcc: updateCurrAcc(\n            forAcc,\n            'repayment',\n            amount,\n            message,\n            prev,\n            date\n          ),\n          accounts: updateAccsRepay(\n            fromAcc,\n            forAcc,\n            'repayment',\n            amount,\n            message,\n            this.state,\n            prev,\n            date\n          ),\n        };\n      });\n  }\n\n  handleLend(fromAcc, forAcc, amount, message = 'dunno') {\n    // validationForTransaction\n    const isValid = this.validationForTransaction(\n      this.state,\n      fromAcc,\n      forAcc,\n      amount,\n      'lend'\n    );\n    if (isValid) {\n      this.setState((prev) => {\n        //////////lended array contain the acc who you are lending to /////////////\n        const isAccExistsInLended = prev.currentAcc.lended.some(\n          (item) => item.to === forAcc\n        ); /// lepassolni az indexet\n\n        console.log(isAccExistsInLended);\n        if (isAccExistsInLended) {\n          return {\n            currentAcc: updateCurrAcc(\n              forAcc,\n              'lend',\n              -amount,\n              message,\n              prev,\n              date,\n              isAccExistsInLended\n            ),\n            accounts: updateAccsLend(\n              this.state.accounts,\n              fromAcc,\n              forAcc,\n              amount,\n              message,\n              date,\n              isAccExistsInLended\n            ),\n          };\n        }\n        /////////lended array doesn't contain the acc who you are lending to ///////\n        return {\n          currentAcc: updateCurrAcc(\n            forAcc,\n            'lend',\n            -amount,\n            message,\n            prev,\n            date,\n            isAccExistsInLended\n          ),\n          accounts: updateAccsLend(\n            this.state.accounts,\n            fromAcc,\n            forAcc,\n            amount,\n            message,\n            date,\n            isAccExistsInLended\n          ),\n        };\n      });\n    }\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"app-container\">\n            <Overlay\n              overlayText={this.state.overlayText}\n              hidden={this.state.overlayHidden}\n              handleCloseOverlay={this.handleCloseOverlay}\n            />\n            <TopNav\n              currentAcc={this.state.currentAcc}\n              login={this.handleLogin}\n              logOutBtnVisibility={this.state.loginVisibility}\n              logOut={this.handleLogOut}\n            />\n            <Route\n              render={({ location }) => (\n                <TransitionGroup>\n                  <CSSTransition\n                    classNames=\"login-transition\"\n                    timeout={1000}\n                    key={location.key}\n                  >\n                    <Switch location={location}>\n                      <Route path=\"/login\">\n                        <Login\n                          isAnimationEnded={this.state.isAnimationEnded}\n                          currentAcc={this.state.currentAcc}\n                          login={this.handleLogin}\n                          loginVisibility={this.state.loginVisibility}\n                        />\n                        {this.state.currentAcc ? <Redirect to=\"/\" /> : ''}\n                      </Route>\n                      {this.state.currentAcc ? '' : <Redirect to=\"/login\" />}\n                      <Route path=\"/\">\n                        <Account\n                          accounts={this.state.accounts}\n                          currentAcc={this.state.currentAcc}\n                          handleRepayment={this.handleRepayment}\n                          lend={this.handleLend}\n                          uploadMoney={this.handleUploadMoney}\n                          logOut={this.handleLogOut}\n                        />\n                      </Route>\n                    </Switch>\n                  </CSSTransition>\n                </TransitionGroup>\n              )}\n            />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}