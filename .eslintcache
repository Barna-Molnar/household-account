[{"/Users/Barna/Documents/Code/household-account/src/index.jsx":"1","/Users/Barna/Documents/Code/household-account/src/reportWebVitals.js":"2","/Users/Barna/Documents/Code/household-account/src/App.jsx":"3","/Users/Barna/Documents/Code/household-account/src/TopNav.jsx":"4","/Users/Barna/Documents/Code/household-account/src/Account.jsx":"5","/Users/Barna/Documents/Code/household-account/src/data.js":"6","/Users/Barna/Documents/Code/household-account/src/Movements.jsx":"7","/Users/Barna/Documents/Code/household-account/src/NewOperator.jsx":"8","/Users/Barna/Documents/Code/household-account/src/Overlay.jsx":"9","/Users/Barna/Documents/Code/household-account/src/Status.jsx":"10","/Users/Barna/Documents/Code/household-account/src/Login.jsx":"11"},{"size":501,"mtime":1607885450289,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1607885083550,"results":"14","hashOfConfig":"13"},{"size":10823,"mtime":1611503220128,"results":"15","hashOfConfig":"13"},{"size":1922,"mtime":1611086834184,"results":"16","hashOfConfig":"13"},{"size":10296,"mtime":1611324980273,"results":"17","hashOfConfig":"13"},{"size":1741,"mtime":1610893877678,"results":"18","hashOfConfig":"13"},{"size":1458,"mtime":1609958409948,"results":"19","hashOfConfig":"13"},{"size":3437,"mtime":1611325561041,"results":"20","hashOfConfig":"13"},{"size":720,"mtime":1610566363321,"results":"21","hashOfConfig":"13"},{"size":1093,"mtime":1610982519645,"results":"22","hashOfConfig":"13"},{"size":1746,"mtime":1611329937787,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1asedt4",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/Barna/Documents/Code/household-account/src/index.jsx",[],["49","50"],"/Users/Barna/Documents/Code/household-account/src/reportWebVitals.js",[],"/Users/Barna/Documents/Code/household-account/src/App.jsx",["51"],"/Users/Barna/Documents/Code/household-account/src/TopNav.jsx",[],"/Users/Barna/Documents/Code/household-account/src/Account.jsx",["52"],"import React from \"react\";\nimport \"./Account.scss\";\n\nimport \"./data\";\nimport { compareAsc, format } from \"date-fns\";\nimport Movements from \"./Movements\";\nimport NewOperator from \"./NewOperator\";\nimport Status from \"./Status\";\n\nclass Account extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentAcc: this.props.currentAcc, /// <= this is not working\n      currentValue: \"\",\n      recepient: \"\",\n      accToBlock: \"\",\n      lendAmount: \"\",\n      message: \"\",\n      amount: \"\",\n    };\n    this.blockBtnText = this.blockBtnText.bind(this);\n  }\n  blockBtnText() {\n    const acc = this.props.accounts.find((acc) => {\n      return acc.username === this.state.accToBlock;\n    });\n    if (acc === undefined || acc.isBlocked === false) {\n      return \"block\";\n    } else {\n      return \"unblock\";\n    }\n  }\n\n  render() {\n    let date = format(new Date(), \"dd/MM/yy\");\n    return (\n      <div\n        className=\"main\"\n        style={\n          this.props.currentAcc === undefined ? { opacity: 0 } : { opacity: 1 }\n        }\n      >\n        <Status\n          currentAcc={this.props.currentAcc}\n          date={date}\n          accounts={this.props.accounts}\n        />\n\n        {/* account component */}\n        <div className=\"accBody\">\n          <div className=\"ops\">\n            <div className=\"op op--lend\">\n              <h2>Lend money</h2>\n              <form\n                action=\"#\"\n                className=\"form form--lend\"\n                style={\n                  this.props.currentAcc === undefined\n                    ? { opacity: 0 }\n                    : this.props.currentAcc.isBlocked === true\n                    ? { opacity: 0 }\n                    : { opacity: 1 }\n                }\n              >\n                <div className=\"input-flex\">\n                  <input\n                    value={this.state.recepient}\n                    onChange={(e) => {\n                      this.setState({ recepient: e.target.value });\n                    }}\n                    type=\"text\"\n                    className=\"form__input form__input--forWho\"\n                  />\n\n                  <input\n                    value={this.state.lendAmount}\n                    onChange={(e) => {\n                      this.setState({ lendAmount: Number(e.target.value) });\n                    }}\n                    type=\"number\"\n                    className=\"form__input form__input--amount\"\n                  />\n                  <button\n                    className=\"form__btn form__btn--lend\"\n                    onClick={(e) => {\n                      e.preventDefault();\n                      if (this.state.message === \"\") {\n                        this.props.lend(\n                          this.props.currentAcc.username,\n                          this.state.recepient,\n                          this.state.lendAmount\n                        );\n                      } else {\n                        this.props.lend(\n                          this.props.currentAcc.username,\n                          this.state.recepient,\n                          this.state.lendAmount,\n                          this.state.message\n                        );\n                      }\n                      this.setState({\n                        recepient: \"\",\n                        lendAmount: \"\",\n                        message: \"\",\n                      });\n                    }}\n                  >\n                    &rarr;\n                  </button>\n                </div>\n                <div className=\"label-flex\">\n                  <div>\n                    <label htmlFor=\"#\" className=\"form__label\">\n                      For Who\n                    </label>\n                  </div>\n                  <div>\n                    <label htmlFor=\"#\" className=\"form__label\">\n                      Amount\n                    </label>\n                  </div>\n                </div>\n                <input\n                  className=\"form__input form__input--message\"\n                  maxLength=\"50\"\n                  value={this.state.message}\n                  onChange={(e) => {\n                    this.setState({ message: e.target.value });\n                  }}\n                  type=\"text\"\n                />\n                <div>\n                  <div className=\"label-flex\">\n                    <label htmlFor=\"#\" className=\"form__label\">\n                      Explanation\n                    </label>\n                  </div>\n                </div>\n              </form>\n            </div>\n            <div className=\"op op--upload\">\n              <h2>Upload money</h2>\n              <form\n                action=\"#\"\n                className=\"form form--borrow\"\n                style={\n                  this.props.currentAcc === undefined\n                    ? { opacity: 0 }\n                    : this.props.currentAcc.isBlocked === true\n                    ? { opacity: 0 }\n                    : { opacity: 1 }\n                }\n              >\n                <div className=\"input-flex\">\n                  {/* <input\n                    value={this.state.recepient}\n                    onChange={(e) => {\n                      this.setState({ recepient: e.target.value });\n                    }}\n                    type=\"text\"\n                    className=\"form__input\"\n                  /> */}\n\n                  <input\n                    value={this.state.amount}\n                    onChange={(e) => {\n                      this.setState({ amount: Number(e.target.value) });\n                    }}\n                    type=\"number\"\n                    className=\"form__input\"\n                  />\n                  <button\n                    className=\"form__btn form__btn--borrow\"\n                    onClick={(e) => {\n                      e.preventDefault();\n                      this.props.uploadMoney(\n                        this.props.currentAcc.username,\n                        this.state.amount\n                      );\n                      this.setState({\n                        recepient: \"\",\n                        amount: \"\",\n                      });\n                    }}\n                  >\n                    &rarr;\n                  </button>\n                </div>\n                <div className=\"label-flex\">\n                  {/* <div>\n                    <label htmlFor=\"#\" className=\"form__label\">\n                      Account\n                    </label>\n                  </div> */}\n                  <div>\n                    <label htmlFor=\"#\" className=\"form__label\">\n                      Amount\n                    </label>\n                  </div>\n                </div>\n              </form>\n            </div>\n            {/* {this.props.currentAcc !== undefined &&\n            (this.props.currentAcc.username === \"jm\" ||\n              this.props.currentAcc.username === \"tm\") ? (\n              <div className=\"op op--block\">\n                <h2>Block account</h2>\n                <form action=\"#\" className=\"form form--block\">\n                  <div className=\"input-flex\">\n                    <input\n                      value={this.state.accToBlock}\n                      onChange={(e) => {\n                        this.setState({ accToBlock: e.target.value });\n                        this.blockBtnText();\n                      }}\n                      type=\"text\"\n                      className=\"form__input form__input--Whoose\"\n                    />\n\n                    <input\n                      value={this.state.message}\n                      onChange={(e) => {\n                        this.setState({ message: e.target.value });\n                      }}\n                      type=\"text\"\n                      className=\"form__input form__input--Why\"\n                    />\n                    <button\n                      className=\"form__btn form__btn--block\"\n                      onClick={(e) => {\n                        e.preventDefault();\n                        this.props.handleBlock(\n                          this.props.currentAcc.username,\n                          this.state.accToBlock,\n                          this.state.message\n                        );\n                        this.setState({\n                          accToBlock: \"\",\n                          message: \"\",\n                        });\n                      }}\n                    >\n                      {this.blockBtnText()}\n                    </button>\n                  </div>\n                  <div className=\"label-flex\">\n                    <div>\n                      <label htmlFor=\"#\" className=\"form__label\">\n                        Whoose Acc\n                      </label>\n                    </div>\n                    <div>\n                      <label htmlFor=\"#\" className=\"form__label\">\n                        Why\n                      </label>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            ) : (\n              \"\"\n            )} */}\n          </div>\n          <div className=\"mov\">\n            {this.props.currentAcc?.movements.map((mov, i) => {\n              return (\n                <Movements\n                  recepient={mov.recepient}\n                  transactionTyp={mov.transactionTyp}\n                  key={i + 1}\n                  i={i}\n                  type={mov.amount > 0 ? \"dep\" : \"withD\"}\n                  mov={mov.amount}\n                  message={mov.message}\n                  date={mov.date}\n                />\n              );\n            })}\n          </div>\n        </div>\n        <div className=\"summeries\">\n          <p className=\"summeries__label\">in</p>\n          <p className=\"summeries__value summeries__value--in\">\n            {this.props.currentAcc?.movements\n              .filter((mov) => mov > 0)\n              .reduce((acc, curr) => acc + curr, 0)}\n            €\n          </p>\n          <p className=\"summeries__label\">out</p>\n          <p className=\"summeries__value summeries__value--out\">\n            {this.props.currentAcc?.movements\n              .filter((mov) => mov < 0)\n              .reduce((acc, curr) => acc + curr, 0)}\n            €\n          </p>\n        </div>\n\n        <NewOperator />\n      </div>\n    );\n  }\n}\n\nexport default Account;\n","/Users/Barna/Documents/Code/household-account/src/data.js",[],"/Users/Barna/Documents/Code/household-account/src/Movements.jsx",[],"/Users/Barna/Documents/Code/household-account/src/NewOperator.jsx",[],["53","54"],"/Users/Barna/Documents/Code/household-account/src/Overlay.jsx",[],"/Users/Barna/Documents/Code/household-account/src/Status.jsx",[],"/Users/Barna/Documents/Code/household-account/src/Login.jsx",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":14,"column":10,"nodeType":"61","messageId":"62","endLine":14,"endColumn":20},{"ruleId":"59","severity":1,"message":"60","line":5,"column":10,"nodeType":"61","messageId":"62","endLine":5,"endColumn":20},{"ruleId":"55","replacedBy":"63"},{"ruleId":"57","replacedBy":"64"},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'compareAsc' is defined but never used.","Identifier","unusedVar",["65"],["66"],"no-global-assign","no-unsafe-negation"]