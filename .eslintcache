[{"/Users/Barna/Documents/Code/household-account/src/index.jsx":"1","/Users/Barna/Documents/Code/household-account/src/reportWebVitals.js":"2","/Users/Barna/Documents/Code/household-account/src/App.jsx":"3","/Users/Barna/Documents/Code/household-account/src/TopNav.jsx":"4","/Users/Barna/Documents/Code/household-account/src/Account.jsx":"5","/Users/Barna/Documents/Code/household-account/src/data.js":"6","/Users/Barna/Documents/Code/household-account/src/Movements.jsx":"7","/Users/Barna/Documents/Code/household-account/src/NewOperator.jsx":"8","/Users/Barna/Documents/Code/household-account/src/Overlay.jsx":"9","/Users/Barna/Documents/Code/household-account/src/Status.jsx":"10","/Users/Barna/Documents/Code/household-account/src/Login.jsx":"11","/Users/Barna/Documents/Code/household-account/src/Counter.jsx":"12","/Users/Barna/Documents/Code/household-account/src/useCounter.js":"13","/Users/Barna/Documents/Code/household-account/src/updateFunctions/updateAccsRepay.js":"14","/Users/Barna/Documents/Code/household-account/src/updateFunctions/findDeleteOrDecrease.js":"15","/Users/Barna/Documents/Code/household-account/src/updateFunctions/updateAccsLend.js":"16","/Users/Barna/Documents/Code/household-account/src/updateFunctions/updateData.js":"17","/Users/Barna/Documents/Code/household-account/src/updateFunctions/addMovement.js":"18","/Users/Barna/Documents/Code/household-account/src/updateFunctions/updateCurrAcc.js":"19"},{"size":501,"mtime":1607885450289,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1607885083550,"results":"22","hashOfConfig":"21"},{"size":9290,"mtime":1616367947073,"results":"23","hashOfConfig":"21"},{"size":951,"mtime":1616453236820,"results":"24","hashOfConfig":"21"},{"size":13314,"mtime":1616452336154,"results":"25","hashOfConfig":"21"},{"size":2043,"mtime":1616376027483,"results":"26","hashOfConfig":"21"},{"size":942,"mtime":1614283281537,"results":"27","hashOfConfig":"21"},{"size":3408,"mtime":1613686248522,"results":"28","hashOfConfig":"21"},{"size":720,"mtime":1612646108654,"results":"29","hashOfConfig":"21"},{"size":2310,"mtime":1616445953530,"results":"30","hashOfConfig":"21"},{"size":1734,"mtime":1614369372453,"results":"31","hashOfConfig":"21"},{"size":299,"mtime":1612646108650,"results":"32","hashOfConfig":"21"},{"size":306,"mtime":1612646108664,"results":"33","hashOfConfig":"21"},{"size":1463,"mtime":1614621476558,"results":"34","hashOfConfig":"21"},{"size":483,"mtime":1614538907151,"results":"35","hashOfConfig":"21"},{"size":1752,"mtime":1614707243730,"results":"36","hashOfConfig":"21"},{"size":253,"mtime":1614538907151,"results":"37","hashOfConfig":"21"},{"size":306,"mtime":1614714234722,"results":"38","hashOfConfig":"21"},{"size":1192,"mtime":1614538907151,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1asedt4",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/Barna/Documents/Code/household-account/src/index.jsx",[],["86","87"],"/Users/Barna/Documents/Code/household-account/src/reportWebVitals.js",[],"/Users/Barna/Documents/Code/household-account/src/App.jsx",[],"/Users/Barna/Documents/Code/household-account/src/TopNav.jsx",[],"/Users/Barna/Documents/Code/household-account/src/Account.jsx",["88","89"],"import React from 'react';\nimport './Account.scss';\nimport './variables.scss';\n\nimport './data';\nimport { compareAsc, format } from 'date-fns';\nimport Movements from './Movements';\nimport Status from './Status';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\n\nlet timer;\n\nclass Account extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentAcc: this.props.currentAcc === undefined ? false : true, /// <= this is not working\n      currentValue: '',\n      recepient: '',\n      lendAmount: '',\n      message: '',\n      amount: '',\n      repayAmount: '',\n      repayMessage: '',\n      repayRecepient: '',\n      logOutTime: 3000, // it is related to to logoutTimer()\n    };\n    this.blockBtnText = this.blockBtnText.bind(this);\n    this.logoutTimer = this.logoutTimer.bind(this);\n  }\n\n  blockBtnText() {\n    const acc = this.props.accounts.find((acc) => {\n      return acc.username === this.state.accToBlock;\n    });\n    if (acc === undefined || acc.isBlocked === false) {\n      return 'block';\n    } else {\n      return 'unblock';\n    }\n  }\n  logoutTimer() {\n    if (this.state.logOutTime === 0) {\n      clearInterval(timer);\n      this.props.logOut();\n    }\n\n    // maybe we should do it from prevState?\n    this.setState({\n      logOutTime: this.state.logOutTime - 1,\n    });\n  }\n  componentDidMount() {\n    timer = setInterval(this.logoutTimer, 1000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.logoutTimer);\n  }\n\n  render() {\n    let date = format(new Date(), 'dd/MM/yy');\n    const min = String(Math.trunc(this.state.logOutTime / 60)).padStart(2, 0);\n    const sec = String(this.state.logOutTime % 60).padStart(2, 0);\n    return (\n      <div className=\"main\">\n        <Status\n          currentAcc={this.props.currentAcc}\n          date={date}\n          accounts={this.props.accounts}\n        />\n\n        {/* account component */}\n        <div className=\"accBody\">\n          <div className=\"mov\">\n            <div className=\"mov__headline\">\n              <p className=\"mov__headline--text\">Latest transactions</p>\n              <button className=\"mov__headline--btn\">\n                {' '}\n                <span> &rarr;</span>{' '}\n              </button>\n            </div>\n            {this.props.currentAcc?.movements.map((mov, i) => {\n              return (\n                <Movements\n                  recepient={mov.recepient}\n                  sender={mov.sender}\n                  transactionTyp={mov.transactionTyp}\n                  key={i + 1}\n                  i={i}\n                  type={mov.amount > 0 ? 'dep' : 'withD'}\n                  mov={mov.amount}\n                  message={mov.message}\n                  date={mov.date}\n                />\n              );\n            })}\n          </div>\n\n          <div className=\"ops\">\n            <div className=\"op op--lend\">\n              <h2>Lend money</h2>\n              <form\n                action=\"#\"\n                className=\"form form--lend\"\n                style={\n                  this.props.currentAcc === undefined\n                    ? { opacity: 0 }\n                    : this.props.currentAcc.isBlocked === true\n                    ? { opacity: 0 }\n                    : { opacity: 1 }\n                }\n              >\n                <div className=\"input-flex\">\n                  <input\n                    value={this.state.recepient}\n                    onChange={(e) => {\n                      this.setState({ recepient: e.target.value });\n                    }}\n                    type=\"text\"\n                    className=\"form__input form__input--forWho\"\n                  />\n\n                  <input\n                    value={this.state.lendAmount}\n                    onChange={(e) => {\n                      this.setState({ lendAmount: Number(e.target.value) });\n                    }}\n                    type=\"number\"\n                    className=\"form__input form__input--amount\"\n                    min=\"1\"\n                  />\n                  <button\n                    className=\"form__btn form__btn--lend\"\n                    onClick={(e) => {\n                      e.preventDefault();\n                      if (this.state.message === '') {\n                        this.props.lend(\n                          this.props.currentAcc.username,\n                          this.state.recepient,\n                          this.state.lendAmount\n                        );\n                      } else {\n                        this.props.lend(\n                          this.props.currentAcc.username,\n                          this.state.recepient,\n                          this.state.lendAmount,\n                          this.state.message\n                        );\n                      }\n                      this.setState({\n                        recepient: '',\n                        lendAmount: '',\n                        message: '',\n                      });\n                    }}\n                  >\n                    &rarr;\n                  </button>\n                </div>\n                <div className=\"label-flex\">\n                  <div>\n                    <label htmlFor=\"#\" className=\"form__label\">\n                      For Who\n                    </label>\n                  </div>\n                  <div>\n                    <label htmlFor=\"#\" className=\"form__label\">\n                      Amount\n                    </label>\n                  </div>\n                </div>\n                <input\n                  className=\"form__input form__input--message\"\n                  maxLength=\"25\"\n                  value={this.state.message}\n                  onChange={(e) => {\n                    this.setState({ message: e.target.value });\n                  }}\n                  type=\"text\"\n                />\n                <div>\n                  <div className=\"label-flex\">\n                    <label htmlFor=\"#\" className=\"form__label explanation\">\n                      Explanation\n                    </label>\n                  </div>\n                </div>\n              </form>\n            </div>\n            <div className=\"op op--repayment\">\n              <h2>Repay Debt</h2>\n              <form action=\"#\" className=\"form form--repayment\">\n                <div className=\"input-flex\">\n                  <input\n                    value={this.state.repayRecepient}\n                    onChange={(e) => {\n                      this.setState({ repayRecepient: e.target.value });\n                    }}\n                    type=\"text\"\n                    className=\"form__input form__input--for\"\n                  />\n\n                  <input\n                    value={this.state.repayAmount}\n                    onChange={(e) => {\n                      this.setState({ repayAmount: e.target.value });\n                    }}\n                    type=\"number\"\n                    className=\"form__input form__input--amount\"\n                    min=\"1\"\n                  />\n                  <button\n                    className=\"form__btn form__btn--repayment\"\n                    onClick={(e) => {\n                      e.preventDefault();\n                      if (this.state.repayMessage === '') {\n                        this.props.handleRepayment(\n                          this.props.currentAcc.username,\n                          this.state.repayRecepient,\n                          this.state.repayAmount\n                        );\n                      } else {\n                        this.props.handleRepayment(\n                          this.props.currentAcc.username,\n                          this.state.repayRecepient,\n                          this.state.repayAmount,\n                          this.state.repayMessage\n                        );\n                      }\n                      this.setState({\n                        repayRecepient: '',\n                        repayAmount: '',\n                        repayMessage: '',\n                      });\n                    }}\n                  >\n                    &rarr;\n                  </button>\n                </div>\n                <div className=\"label-flex\">\n                  <div>\n                    <label htmlFor=\"#\" className=\"form__label\">\n                      For Who\n                    </label>\n                  </div>\n                  <div>\n                    <label htmlFor=\"#\" className=\"form__label\">\n                      Amount\n                    </label>\n                  </div>\n                </div>\n                <input\n                  className=\"form__input form__input--message\"\n                  maxLength=\"25\"\n                  value={this.state.repayMessage}\n                  onChange={(e) => {\n                    this.setState({ repayMessage: e.target.value });\n                  }}\n                  type=\"text\"\n                />\n                <div>\n                  <div className=\"label-flex\">\n                    <label htmlFor=\"#\" className=\"form__label\">\n                      Explanation\n                    </label>\n                  </div>\n                </div>\n              </form>\n            </div>\n            <div className=\"op op--upload\">\n              <h2>Upload money</h2>\n              <form\n                action=\"#\"\n                className=\"form form--borrow\"\n                style={\n                  this.props.currentAcc === undefined\n                    ? { opacity: 0 }\n                    : this.props.currentAcc.isBlocked === true\n                    ? { opacity: 0 }\n                    : { opacity: 1 }\n                }\n              >\n                <div className=\"input-flex\">\n                  {/* <input\n                    value={this.state.recepient}\n                    onChange={(e) => {\n                      this.setState({ recepient: e.target.value });\n                    }}\n                    type=\"text\"\n                    className=\"form__input\"\n                  /> */}\n\n                  <input\n                    value={this.state.amount}\n                    onChange={(e) => {\n                      this.setState({ amount: Number(e.target.value) });\n                    }}\n                    type=\"number\"\n                    className=\"form__input\"\n                    min=\"1\"\n                  />\n                  <button\n                    className=\"form__btn form__btn--borrow\"\n                    onClick={(e) => {\n                      e.preventDefault();\n                      this.props.uploadMoney(\n                        this.props.currentAcc.username,\n                        this.state.amount\n                      );\n                      this.setState({\n                        recepient: '',\n                        amount: '',\n                      });\n                    }}\n                  >\n                    &rarr;\n                  </button>\n                </div>\n                <div className=\"label-flex\">\n                  {/* <div>\n                    <label htmlFor=\"#\" className=\"form__label\">\n                      Account\n                    </label>\n                  </div> */}\n                  <div>\n                    <label htmlFor=\"#\" className=\"form__label\">\n                      Amount\n                    </label>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n          <div className=\"summeries\">\n            <div className=\"summeries__header\">\n              <p className=\"summeries__header--text\">Summeries</p>\n              <p\n                style={{\n                  fontSize: '20px',\n                  color: '#777',\n                  marginRight: 'auto',\n                  marginLeft: '.5rem',\n                }}\n              >\n                (Daily)\n              </p>\n              <button className=\"mov__header--btn\">\n                {' '}\n                <span> &rarr;</span>{' '}\n              </button>\n            </div>\n            <div className=\"summeries__body\">\n              <div className=\"labels\">\n                <p className=\"summeries__label\">income</p>\n                <p className=\"summeries__label\">outgang</p>\n                <p className=\"summeries__label\">Logged out in:</p>\n              </div>\n              <div className=\"values\">\n                <p className=\"summeries__value summeries__value--in\">\n                  {this.props.currentAcc?.movements\n                    .map((mov) => {\n                      return mov.amount > 0 ? mov.amount : 0;\n                    })\n                    .reduce((acc, curr) => acc + curr, 0)}\n                  €\n                </p>\n                <p className=\"summeries__value summeries__value--out\">\n                  {this.props.currentAcc?.movements\n                    .map((mov) => {\n                      return mov.amount < 0 ? mov.amount : 0;\n                    })\n                    .reduce((acc, curr) => acc + curr, 0)}\n                  €\n                </p>\n                <p className=\"timer\">\n                  {min}:{sec}\n                </p>\n              </div>\n            </div>\n            {/* <Calendar activeStartDate={new Date()} showWeekNumbers /> */}\n          </div>\n\n          {/* <NewOperator /> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Account;\n","/Users/Barna/Documents/Code/household-account/src/data.js",["90"],"import { compareAsc, format } from \"date-fns\";\n\n/// implement actuel Date\n// Date formatting with date-fns\nexport let date = format(new Date(), \"dd/MM/yy\");\n// const today = new Date();\n// export let date = today.getMonth() + 1 + \"-\" + today.getDate();\n//////////////////\n// Data\nexport const account1 = {\n    owner: 'John Miller',\n    balance: 10000,\n    accNum: '** **** **** **** **** 1234',\n    movements: [{\n        amount: -200,\n        date: date,\n        transactionTyp: \"casual\",\n        sender: 'jm',\n        recepient: 'km',\n        message: `i don't know`\n    }],\n    debt: [],\n    lended: [],\n\n\n};\n\nexport const account2 = {\n    owner: 'Teresa Miller',\n    accNum: '** **** **** **** **** 1234',\n    balance: 7000,\n    movements: [],\n    debt: [],\n    lended: [],\n};\n\nexport const account3 = {\n    owner: 'Steven Miller',\n    accNum: '** **** **** **** **** 1234',\n    balance: 0,\n    movements: [],\n    isBlocked: false,\n    debt: [],\n    lended: [],\n};\n\nexport const account4 = {\n    owner: 'Katie Miller',\n    balance: 0,\n    accNum: '** **** **** **** **** 1234',\n    movements: [{\n        amount: 200,\n        date: date,\n        transactionTyp: \"casual\",\n        sender: 'jm',\n        recepient: 'km',\n        message: `i don't know`\n    }],\n    isBlocked: false,\n    debt: [],\n    lended: [],\n\n};\nexport const testAcc = {\n    owner: 'Test Person',\n    username: \"tp\",\n    balance: 5000,\n    movements: [{\n        amount: -200,\n        time: \"date\",\n        transactionTyp: \"lend\",\n        sender: 'jm',\n        recepient: 'km',\n        message: `i don't know`\n    }, {\n        amount: 400,\n        time: \"12-12\",\n        transactionTyp: \"borrow\",\n        sender: 'tm',\n        recepient: 'sm',\n        message: `football`\n    }],\n}\n\n\n\nexport const accounts = [account1, account2, account3, account4];\n// Create username\n\nconst createUsername = function(accs) {\n    accs.forEach(acc => {\n        acc.username = acc.owner\n            .toLowerCase().split(' ').map(item => item[0]).join('')\n    });\n}\ncreateUsername(accounts);","/Users/Barna/Documents/Code/household-account/src/Movements.jsx",[],"/Users/Barna/Documents/Code/household-account/src/NewOperator.jsx",["91"],"import React from \"react\";\nimport \"./NewOperator.scss\";\n\nclass NewOperator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <div className=\"ops\">\n        <div className=\"op op--borrow\">\n          <h2>What do you want to do ?</h2>\n          <div className=\"op__radioBtn\">\n            <input\n              type=\"radio\"\n              id=\"contactChoice1\"\n              name=\"contact\"\n              value=\"Upload\"\n            />\n            <label htmlFor=\"contactChoice2\">Upload</label>\n            <input\n              type=\"radio\"\n              id=\"contactChoice2\"\n              name=\"contact\"\n              value=\"Lend\"\n            />\n            <label htmlFor=\"contactChoice2\">Lend</label>\n\n            <input\n              type=\"radio\"\n              id=\"contactChoice3\"\n              name=\"contact\"\n              value=\"Casual\"\n            />\n            <label htmlFor=\"contactChoice3\">Casual</label>\n            <input\n              type=\"radio\"\n              id=\"contactChoice4\"\n              name=\"contact\"\n              value=\"Repayment\"\n            />\n            <label htmlFor=\"contactChoice4\">Repayment</label>\n          </div>\n\n          <form action=\"#\" className=\"form form--lend\">\n            <div className=\"input-flex\">\n              <input\n                value={this.state.recepient}\n                onChange={(e) => {\n                  this.setState({ recepient: e.target.value });\n                }}\n                type=\"text\"\n                className=\"form__input form__input--forWho\"\n              />\n\n              <input\n                value={this.state.lendAmount}\n                onChange={(e) => {\n                  this.setState({ lendAmount: Number(e.target.value) });\n                }}\n                type=\"number\"\n                className=\"form__input form__input--amount\"\n              />\n              <button\n                className=\"form__btn form__btn--lend\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  this.props.lend(\n                    this.props.currentAcc.username,\n                    this.state.recepient,\n                    this.state.lendAmount\n                  );\n                  this.setState({\n                    recepient: \"\",\n                    lendAmount: \"\",\n                  });\n                }}\n              >\n                &rarr;\n              </button>\n            </div>\n            <div className=\"label-flex\">\n              <div>\n                <label htmlFor=\"#\" className=\"form__label\">\n                  For Who\n                </label>\n              </div>\n              <div>\n                <label htmlFor=\"#\" className=\"form__label\">\n                  Amount\n                </label>\n              </div>\n            </div>\n            <input\n              className=\"form__input form__input--message\"\n              maxLength=\"50\"\n              value={this.state.message}\n              onChange={(e) => {\n                this.setState({ message: e.target.value });\n              }}\n              type=\"text\"\n            />\n            <div>\n              <div className=\"label-flex\">\n                <label htmlFor=\"#\" className=\"form__label\">\n                  Explanation\n                </label>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n",["92","93"],"/Users/Barna/Documents/Code/household-account/src/Overlay.jsx",[],"/Users/Barna/Documents/Code/household-account/src/Status.jsx",["94"],"import React, { Component } from 'react';\nimport Calendar from 'react-calendar';\n\nimport './Status.scss';\n\nclass Status extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hidden: false,\n      date: new Date(),\n    };\n  }\n  onChange = (date) => this.setState({ date });\n  render() {\n    return (\n      <div className=\"status\">\n        <div className=\"status__current-container\">\n          <p className=\"status__label\">{this.props.currentAcc.owner}</p>\n\n          <p className=\"status__accNum\">\n            {this.props.currentAcc.accNum}{' '}\n            <span className=\"status__accNum--arr\">&rarr;</span>\n          </p>\n          <p className=\"status__date\">{this.props.date}</p>\n          <p className=\"status__label--value\">Available funds</p>\n          <p className=\"status__value\">\n            {this.props.currentAcc?.balance\n              ? this.props.currentAcc?.balance\n              : 0}\n            <span className=\"status__value--euro\">€</span>\n          </p>\n        </div>\n        <div\n          className={`status__message \n          ${this.props.currentAcc?.debt.length === 0 ? '0' : ''} \n          \n          `} /// develop fase string 0 === \"hidden\"\n        >\n          {this.props.currentAcc?.debt.map((debt, i) => {\n            if (debt.length === 0) {\n              return '';\n            } else {\n              return (\n                <p key={i}>\n                  I owe {debt.value} to {debt.to}\n                </p>\n              );\n            }\n          })}\n          {this.props.currentAcc?.lended.map((lended, i) => {\n            if (lended.length === 0) {\n              return '';\n            } else {\n              return (\n                <p key={i}>\n                  {lended.to} owes you {lended.value}\n                </p>\n              );\n            }\n          })}\n          {/* <Calendar\n            onChange={this.onChange}\n            value={this.state.date}\n            activeStartDate={new Date()}\n            defaultView={'year'}\n          /> */}\n        </div>\n        {/* <div>\n          <p className=\"status__value\">\n            {this.props.currentAcc?.balance\n              ? this.props.currentAcc?.balance\n              : 0}\n            €\n          </p>\n        </div> */}\n      </div>\n    );\n  }\n}\n\nexport default Status;\n","/Users/Barna/Documents/Code/household-account/src/Login.jsx",[],"/Users/Barna/Documents/Code/household-account/src/Counter.jsx",["95","96"],"import React, { useEffect, useState } from \"react\";\nimport useCounter from \"./useCounter\";\n\nconst Counter = () => {\n  const [count, setCount] = useCounter();\n\n  return (\n    <div>\n      {count}\n      <button onClick={() => setCount(count + 1)}>+</button>\n    </div>\n  );\n};\n\nexport default Counter;\n",["97","98"],"/Users/Barna/Documents/Code/household-account/src/useCounter.js",[],"/Users/Barna/Documents/Code/household-account/src/updateFunctions/updateAccsRepay.js",[],"/Users/Barna/Documents/Code/household-account/src/updateFunctions/findDeleteOrDecrease.js",[],"/Users/Barna/Documents/Code/household-account/src/updateFunctions/updateAccsLend.js",[],"/Users/Barna/Documents/Code/household-account/src/updateFunctions/updateData.js",[],"/Users/Barna/Documents/Code/household-account/src/updateFunctions/addMovement.js",[],"/Users/Barna/Documents/Code/household-account/src/updateFunctions/updateCurrAcc.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":6,"column":10,"nodeType":"105","messageId":"106","endLine":6,"endColumn":20},{"ruleId":"103","severity":1,"message":"107","line":9,"column":8,"nodeType":"105","messageId":"106","endLine":9,"endColumn":16},{"ruleId":"103","severity":1,"message":"104","line":1,"column":10,"nodeType":"105","messageId":"106","endLine":1,"endColumn":20},{"ruleId":"103","severity":1,"message":"108","line":4,"column":7,"nodeType":"105","messageId":"106","endLine":4,"endColumn":18},{"ruleId":"99","replacedBy":"109"},{"ruleId":"101","replacedBy":"110"},{"ruleId":"103","severity":1,"message":"107","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":16},{"ruleId":"103","severity":1,"message":"111","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":26},{"ruleId":"103","severity":1,"message":"112","line":1,"column":28,"nodeType":"105","messageId":"106","endLine":1,"endColumn":36},{"ruleId":"99","replacedBy":"113"},{"ruleId":"101","replacedBy":"114"},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'compareAsc' is defined but never used.","Identifier","unusedVar","'Calendar' is defined but never used.","'NewOperator' is defined but never used.",["115"],["116"],"'useEffect' is defined but never used.","'useState' is defined but never used.",["115"],["116"],"no-global-assign","no-unsafe-negation"]